import textwrap

def menu(): 
    menu = """\n
    ========== MENU ==========
    [d]\t Depositar
    [s]\t Sacar
    [e]\t Extrato
    [nc]\t Nova conta
    [lc]\t Listar contas
    [nu]\t Novo usuário
    [q]\t Sair
    => """
    return input (textwrap.dedent(menu))

def depositar (valor, saldo, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f"Depósito: R$ {valor:.2f}\n"
        print ("Depósito realizado com sucesso.")
    else:
        print ("Operação falhou! O valor informado é inválido.")
    return saldo, extrato

def sacar (*, valor, saldo, extrato, limite, numero_de_saques, limite_de_saques):
    if valor > saldo:
        print ("Operação falhou! Você não tem saldo o suficiente.")
    elif valor > limite:
        print ("Operação falhou! O valor de saque excedeu o limite.")
    elif numero_de_saques >= limite_de_saques:
        print ("Operação falhou! Número máximo de saques excedido.")
    elif valor > 0:
        saldo -= valor
        extrato += f"Saque: R$ {valor:.2f}\n"
        numero_de_saques += 1
        print ("Saque realizado com sucesso.")
    else:
        print ("Operação falhou! Valor informado e inválido.")
    return saldo, extrato, numero_de_saques

def exibir_extrato (saldo, /, *, extrato):
    print ("\n=========== EXTRATO ===========")
    print ("não foram realizados movimentações." if not extrato else extrato)
    print (f"\n Saldo: R$ {saldo:.2f}")
    print ("================================")

def criar_usuario (usuarios):
    cpf = input("Informe o cpf (somente números): ")
    usuario = filtrar_usuario (cpf, usuarios)

    if usuario:
        print ("Já existe um usuário com esse CPF.")
        return
    
    nome = input ("Informe o nome completo: ")
    data_de_nascimento = input ("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input ("Informe o endereço (logradouro, número - bairro - cidade/estado): ")

    usuarios.append ({"nome": nome, "data_de_nascimento": data_de_nascimento, "cpf": cpf,"endereco": endereco})

    print ("Usuário criado com sucesso.")

def filtrar_usuario (cpf, usuarios):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta (agencia, numero_conta, usuarios):
    cpf = input ("Informe o CPF do usuário: ")
    usuario = filtrar_usuario (cpf, usuarios)

    if usuario:
        print ("Conta criada com sucesso.")
        return {"agencia": agencia, "numero_conta": numero_conta, "usuario": usuario}
    
    print ("Usuário não encontrado, fluxo de criação de conta encerrado.")

def listar_contas (contas):
    for conta in contas:
        linha = f"""\
        Agência: {conta['agencia']}
        Conta: {conta['numero_conta']}
        Usuário: {conta['usuario']['nome']}
        """
        print (linha)

def main():
    LIMITE_DE_SAQUES = 3
    AGENCIA = "0001"

    saldo = 0
    limite = 5000
    extrato = ""
    numero_de_saques = 0
    limite_de_saques = 5
    usuarios = []
    contas = []
    while True:
        opcao = menu()

        if opcao == "d":
            valor = float(input("Informe o valor do depósito: "))
            saldo, extrato = depositar (valor, saldo, extrato)
    
        elif opcao == "s":
            valor = float(input("Informe a quantia do saque: "))

            saldo, extrato, numero_de_saques = sacar (
            valor = valor,
            saldo = saldo, 
            extrato = extrato, 
            limite = limite, 
            numero_de_saques = numero_de_saques, 
            limite_de_saques = LIMITE_DE_SAQUES)
        
        elif opcao == "e":
            exibir_extrato (saldo, extrato=extrato)

        elif opcao == "nu":
            criar_usuario (usuarios)
    
        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta (AGENCIA, numero_conta, usuarios)

            if conta:
                contas.append(conta)

        elif opcao == "lc":
            listar_contas (contas)

        elif opcao == "q":
            break

        else:
            print ("Operação inválida, por favor selecione novamente a operação desejada.")

main ()